name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Setup environment
        run: |
          echo "CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> $env:GITHUB_ENV
          echo "BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $env:GITHUB_ENV
          echo "RDP_CREDS=User: RDP | Password: Poka1337" >> $env:GITHUB_ENV

      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Send Telegram (RDP Settings)
        run: |
          $url = "https://api.telegram.org/bot${env:BOT_TOKEN}/sendMessage"
          $payload = @{ chat_id = "${env:CHAT_ID}"; text = "üîß RDP Settings configured.`n${env:RDP_CREDS}" } | ConvertTo-Json
          Invoke-RestMethod -Uri $url -Method Post -ContentType "application/json" -Body $payload

      - name: Install Tailscale
        run: |
          Invoke-WebRequest https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi -OutFile tailscale.msi
          Start-Process msiexec.exe -ArgumentList '/i tailscale.msi /quiet' -Wait

      - name: Send Telegram (Install Tailscale)
        run: |
          $msg = if ($LASTEXITCODE -eq 0) { "‚úÖ Tailscale Installed" } else { "‚ùå Tailscale Install Failed" }
          $url = "https://api.telegram.org/bot${env:BOT_TOKEN}/sendMessage"
          $payload = @{ chat_id = "${env:CHAT_ID}"; text = $msg } | ConvertTo-Json
          Invoke-RestMethod -Uri $url -Method Post -ContentType "application/json" -Body $payload

      - name: Tailscale Login
        id: tailscale-login
        run: |
          $output = tailscale up
          if ($output -match "https://login.tailscale.com/a/\S+") {
            $matches[0] | Out-File authlink.txt
          }

      - name: Send Telegram (Login Info)
        run: |
          $link = Get-Content authlink.txt
          $url = "https://api.telegram.org/bot${env:BOT_TOKEN}/sendMessage"
          $payload = @{ chat_id = "${env:CHAT_ID}"; text = "üîë Tailscale Login Required:`n$link" } | ConvertTo-Json
          Invoke-RestMethod -Uri $url -Method Post -ContentType "application/json" -Body $payload

      - name: Wait before status check
        run: Start-Sleep -Seconds 300

      - name: Check Tailscale Status
        run: |
          $status = tailscale status
          $url = "https://api.telegram.org/bot${env:BOT_TOKEN}/sendMessage"
          $payload = @{ chat_id = "${env:CHAT_ID}"; text = "üì° Tailscale Status:`n$status" } | ConvertTo-Json
          Invoke-RestMethod -Uri $url -Method Post -ContentType "application/json" -Body $payload

      - name: Keep Runner Alive
        run: Start-Sleep -Seconds 3540
