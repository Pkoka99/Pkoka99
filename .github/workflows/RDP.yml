name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                             -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force
        continue-on-error: false

      - name: Notify Telegram - RDP Configured
        run: |
          $msg = "âœ… Core RDP settings configured."
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" `
                            -Method POST -Body @{ chat_id = ${{ secrets.TELEGRAM_CHAT_ID }}; text = $msg }

      - name: Create RDP User with Secure Password
        run: |
          $Password = ConvertTo-SecureString "Poka1337" -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $Password -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_CREDS=User: RDP | Password: Poka1337" >> $env:GITHUB_ENV

      - name: Notify Telegram - RDP User Created
        run: |
          $msg = "ðŸ‘¤ RDP user created: $env:RDP_CREDS"
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" `
                            -Method POST -Body @{ chat_id = ${{ secrets.TELEGRAM_CHAT_ID }}; text = $msg }

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Notify Telegram - Tailscale Installed
        run: |
          $msg = "ðŸŒ€ Tailscale installed successfully."
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" `
                            -Method POST -Body @{ chat_id = ${{ secrets.TELEGRAM_CHAT_ID }}; text = $msg }

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$env:GITHUB_RUN_ID
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }
          if (-not $tsIP) { Write-Error "Tailscale IP not assigned"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Notify Telegram - Tailscale Connected
        run: |
          $msg = "ðŸ”— Tailscale connected: $env:TAILSCALE_IP"
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" `
                            -Method POST -Body @{ chat_id = ${{ secrets.TELEGRAM_CHAT_ID }}; text = $msg }

      - name: Verify RDP Accessibility
        run: |
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) { Write-Error "TCP connection failed"; exit 1 }

      - name: Notify Telegram - RDP Verified
        run: |
          $msg = "ðŸ’» RDP accessible at $env:TAILSCALE_IP | User: RDP | Password: Poka1337"
          Invoke-RestMethod -Uri "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" `
                            -Method POST -Body @{ chat_id = ${{ secrets.TELEGRAM_CHAT_ID }}; text = $msg }
